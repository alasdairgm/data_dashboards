lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
summarise(median = median(star_rating, na.rm = TRUE))
tibble(theme = unique(lego$theme_name),
median = lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
summarise(median = median(star_rating, na.rm = TRUE))
%>% pull(median))
tibble(theme = unique(lego$theme_name),
median = lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
summarise(median = median(star_rating, na.rm = TRUE))
%>% pull(median))
lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
summarise(median = median(star_rating, na.rm = TRUE))
%>% pull(median))
lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
summarise(median = median(star_rating, na.rm = TRUE))
%>% pull(median)
lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
summarise(median = median(star_rating, na.rm = TRUE)) %>%
pull(median)
tibble(theme = unique(lego$theme_name),
median = lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
summarise(median = median(star_rating, na.rm = TRUE)) %>%
pull(median)
)
lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
summarise(median = median(star_rating, na.rm = TRUE)) %>%
arrange(median)
lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
summarise(median = median(star_rating, na.rm = TRUE)) %>%
arrange(median) %>%
pull(theme_name)
ordered_themes <-
# tibble(theme = unique(lego$theme_name),
# median =
lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
summarise(median = median(star_rating, na.rm = TRUE)) %>%
arrange(median) %>%
pull(theme_name)
ordered_themes
ordered_themes <-
tibble(theme = unique(lego$theme_name),
median = lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
summarise(median = median(star_rating, na.rm = TRUE)) %>%
arrange(median) %>%
pull(theme_name)
)
ordered_themes
ordered_themes <-
tibble(theme = unique(lego$theme_name),
median = lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
summarise(median = median(star_rating, na.rm = TRUE)) %>%
arrange(median) %>%
pull(median)
)
ordered_themes
# mutate(theme_name = fct_reorder(theme_name, star_rating, median)) %>%
ggplot(aes(x = reorder(theme_name, ordered_themes$theme, y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
# mutate(theme_name = fct_reorder(theme_name, star_rating, median)) %>%
lego %>%
ggplot(aes(x = reorder(theme_name, ordered_themes$theme), y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating")
# mutate(theme_name = fct_reorder(theme_name, star_rating, median)) %>%
lego %>%
lego %>%
select(star_rating, theme_name) %>%
group_by(theme_name) %>%
head(10) %>%
dput()
lego %>%
select(star_rating, theme_name) %>%
group_by(theme_name) %>%
slice(1:10) %>%
dput()
lego %>%
ggplot(aes(x = reorder(theme_name, ordered_themes$theme), y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating")
reorder(theme_name, ordered_themes$theme)
reorder(lego$theme_name, ordered_themes$theme)
lego$theme_name
ordered_themes$theme
ordered_themes
# mutate(theme_name = fct_reorder(theme_name, star_rating, median)) %>%
lego %>%
mutate(theme_name = fct_reorder(theme_name, ordered_themes$theme))
ordered_themes <-
tibble(theme = lego$theme_name,
median = lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
summarise(median = median(star_rating, na.rm = TRUE)) %>%
arrange(median) %>%
pull(median)
)
lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
mutate(median = median(star_rating, na.rm = TRUE)) %>%
arrange(median)
lego$theme_name
lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
mutate(median = median(star_rating, na.rm = TRUE)) %>%
arrange(median) %>%
pull(median)
lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
mutate(median = median(star_rating, na.rm = TRUE)) %>%
arrange(median)
lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
mutate(median = median(star_rating, na.rm = TRUE)) %>%
arrange(median) %>%
select(-star_rating)
ordered_themes <-
lego %>%
select(theme_name, star_rating) %>%
group_by(theme_name) %>%
mutate(median = median(star_rating, na.rm = TRUE)) %>%
arrange(median) %>%
select(-star_rating)
ordered_themes
lego %>%
ggplot(aes(x = reorder(theme_name, ordered_themes$theme), y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating")
lego$theme_name
ordered_themes$them
ordered_themes$theme
ordered_themes
lego %>%
ggplot(aes(x = reorder(lego$theme_name, ordered_themes$theme_name), y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating")
ordered_themes
ordered_themes$theme_name
lego$theme_name
ordered_themes$theme_name
lego %>%
ggplot(aes(x = reorder(lego$theme_name, ordered_themes$theme_name), y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating")
lego
ordered_themes
lego %>%
mutate(reordered_themes = ordered_themes$theme_name)
ggplot(aes(x = reorder(theme_name, reordered_themes), y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating")
lego %>%
mutate(reordered_themes = ordered_themes$theme_name) %>%
ggplot(aes(x = reorder(theme_name, reordered_themes), y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating")
lego %>%
mutate(reordered_themes = ordered_themes$theme_name) %>%
ggplot(aes(x = reorder(theme_name, reordered_themes), y = star_rating))
lego %>% group_by(theme_name) %>%
summarise(med = median(star_rating) %>%
select(star_rating)
lego %>% group_by(theme_name) %>%
lego %>% group_by(theme_name) %>%
summarise(med = median(star_rating)) %>%
select(star_rating)
lego %>% group_by(theme_name) %>%
summarise(med = median(star_rating)) %>%
select(med)
lego %>% group_by(theme_name) %>%
summarise(med = median(star_rating))
(lego %>% group_by(theme_name) %>%
summarise(med = median(star_rating)))
(lego %>% group_by(theme_name) %>%
summarise(med = median(star_rating)))$med
lego %>%
mutate(reordered_themes = ordered_themes$theme_name) %>%
ggplot(aes(x = reorder(theme_name, (lego %>% group_by(theme_name) %>%
summarise(med = median(star_rating)))$med
, y = star_rating))) +
geom_boxplot(fill = "goldenrod", col = "black")
reorder(theme_name, (lego %>% group_by(theme_name) %>%
summarise(med = median(star_rating)))$med
reorder(theme_name, (lego %>% group_by(theme_name) %>%
(lego %>% group_by(theme_name) %>%
summarise(med = median(star_rating)))
reorder(theme_name, (lego %>% group_by(theme_name) %>%
summarise(med = median(star_rating)))$med)
reorder(lego$theme_name, (lego %>% group_by(theme_name) %>%
summarise(med = median(star_rating)))$med)
lego$theme_name
size(lego$theme_name)
length(lego$theme_name)
length((lego %>% group_by(theme_name) %>%
summarise(med = median(star_rating)))$med))
length((lego %>% group_by(theme_name) %>%
summarise(med = median(star_rating)))$med)
lego %>%
ggplot(aes(x = reorder(theme_name, star_rating), y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating")
runApp()
runApp()
runApp()
runApp()
runApp()
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median, .na_rm = TRUE, na.rm = TRUE)) %>%
ggplot(aes(star_rating, theme_name)) +
geom_boxplot
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median, .na_rm = TRUE, na.rm = TRUE)) %>%
ggplot(aes(star_rating, theme_name)) +
geom_boxplot()
lego
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median, .na_rm = TRUE, na.rm = TRUE)) %>%
ggplot(aes(star_rating, theme_name)) +
geom_boxplot()
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median, .na_rm = TRUE, na.rm = TRUE))
lego
read_csv("data/lego_sets.csv") %>%
select(-prod_long_desc) %>%
group_by(theme_name) %>%
mutate(theme_name = ifelse(str_detect(
theme_name, "Attack|Rampage|Transport|Pursuit|Breakout|Chase|Escape"),
'Jurassic Park', theme_name)) %>%
ungroup() %>%
filter(country == "US",
theme_name != "BOOST") %>%
relocate(set_name, .before = 1)
## option 2: group single-set Jurassic Park themes
lego <- read_csv("data/lego_sets.csv") %>%
select(-prod_long_desc) %>%
group_by(theme_name) %>%
mutate(theme_name = ifelse(str_detect(
theme_name, "Attack|Rampage|Transport|Pursuit|Breakout|Chase|Escape"),
'Jurassic Park', theme_name)) %>%
ungroup() %>%
filter(country == "US",
theme_name != "BOOST") %>%
relocate(set_name, .before = 1)
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median, .na_rm = TRUE, na.rm = TRUE)) %>%
ggplot(aes(star_rating, theme_name)) +
geom_boxplot()
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median,  na.rm = TRUE)) %>%
ggplot(aes(star_rating, theme_name)) +
geom_boxplot()
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median,  na.rm = TRUE)) %>%
ggplot(aes(x = theme_name, y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating")
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median,  na.rm = TRUE)) %>%
ggplot(aes(x = theme_name, y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating") +
theme(plot.margin = margin(1,1,1.5,1.2, "cm"))
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median,  na.rm = TRUE)) %>%
ggplot(aes(x = theme_name, y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating") +
theme(plot.margin = margin(1,1,1.5,1.2, "cm"))
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median,  na.rm = TRUE)) %>%
ggplot(aes(x = theme_name, y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating") +
theme(plot.margin = margin(2,1,1,1.2, "cm"))
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median,  na.rm = TRUE)) %>%
ggplot(aes(x = theme_name, y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating") +
theme(plot.margin = margin(1,2,1,1.2, "cm"))
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median,  na.rm = TRUE)) %>%
ggplot(aes(x = theme_name, y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating") +
theme(plot.margin = margin(2,2,1,1.2, "cm"))
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median,  na.rm = TRUE)) %>%
ggplot(aes(x = theme_name, y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating") +
theme(plot.margin = margin(4,2,1,1.2, "cm"))
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median,  na.rm = TRUE)) %>%
ggplot(aes(x = theme_name, y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 12, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating")
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median,  na.rm = TRUE)) %>%
ggplot(aes(x = theme_name, y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 10, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating")
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median,  na.rm = TRUE)) %>%
ggplot(aes(x = theme_name, y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 9, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating")
lego %>%
ungroup() %>%
mutate(theme_name = fct_reorder(theme_name, star_rating, median,  na.rm = TRUE)) %>%
ggplot(aes(x = theme_name, y = star_rating)) +
geom_boxplot(fill = "goldenrod", col = "black") +
stat_boxplot(geom = "errorbar") +
labs(y = "Average set rating (stars)",
x = "Theme") +
theme_minimal() +
# coord_cartesian(ylim = c(4, 5)) +
theme(axis.text = element_text(size = 6, face = "bold", hjust = 1, angle = 45),
axis.title = element_text(size = 12, face = "bold"),
title = element_text(size = 14, face = "bold")) +
labs(title = "Lego themes arranged by average star rating")
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
